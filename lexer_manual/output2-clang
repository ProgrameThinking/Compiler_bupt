int 'int'        [StartOfLine]  Loc=<test2.c:1:1>
identifier 'judge'       [LeadingSpace] Loc=<test2.c:1:5>
l_paren '('             Loc=<test2.c:1:10>
long 'long'             Loc=<test2.c:1:11>
long 'long'      [LeadingSpace] Loc=<test2.c:1:16>
identifier 'a'   [LeadingSpace] Loc=<test2.c:1:21>
r_paren ')'             Loc=<test2.c:1:22>
semi ';'                Loc=<test2.c:1:23>
int 'int'        [StartOfLine]  Loc=<test2.c:3:1>
identifier 'main'        [LeadingSpace] Loc=<test2.c:3:5>
l_paren '('             Loc=<test2.c:3:9>
r_paren ')'             Loc=<test2.c:3:10>
l_brace '{'      [StartOfLine]  Loc=<test2.c:4:1>
int 'int'        [StartOfLine] [LeadingSpace]   Loc=<test2.c:5:5>
identifier 'n'   [LeadingSpace] Loc=<test2.c:5:9>
comma ','               Loc=<test2.c:5:10>
identifier 'x'          Loc=<test2.c:5:11>
semi ';'                Loc=<test2.c:5:12>
int 'int'        [StartOfLine] [LeadingSpace]   Loc=<test2.c:6:5>
identifier 'num'         [LeadingSpace] Loc=<test2.c:6:9>
l_square '['            Loc=<test2.c:6:12>
numeric_constant '11'           Loc=<test2.c:6:13>
r_square ']'            Loc=<test2.c:6:15>
equal '='               Loc=<test2.c:6:16>
l_brace '{'             Loc=<test2.c:6:17>
numeric_constant '0'            Loc=<test2.c:6:18>
r_brace '}'             Loc=<test2.c:6:19>
semi ';'                Loc=<test2.c:6:20>
identifier 'scanf'       [StartOfLine] [LeadingSpace]   Loc=<test2.c:7:5>
l_paren '('             Loc=<test2.c:7:10>
string_literal '"%d"'           Loc=<test2.c:7:11>
comma ','               Loc=<test2.c:7:15>
amp '&'         Loc=<test2.c:7:16>
identifier 'n'          Loc=<test2.c:7:17>
r_paren ')'             Loc=<test2.c:7:18>
semi ';'                Loc=<test2.c:7:19>
long 'long'      [StartOfLine] [LeadingSpace]   Loc=<test2.c:8:5>
long 'long'      [LeadingSpace] Loc=<test2.c:8:10>
identifier 'a'   [LeadingSpace] Loc=<test2.c:8:15>
semi ';'                Loc=<test2.c:8:16>
for 'for'        [StartOfLine] [LeadingSpace]   Loc=<test2.c:9:5>
l_paren '('             Loc=<test2.c:9:8>
identifier 'x'          Loc=<test2.c:9:9>
equal '='               Loc=<test2.c:9:10>
numeric_constant '0'            Loc=<test2.c:9:11>
semi ';'                Loc=<test2.c:9:12>
identifier 'x'          Loc=<test2.c:9:13>
less '<'                Loc=<test2.c:9:14>
identifier 'n'          Loc=<test2.c:9:15>
semi ';'                Loc=<test2.c:9:16>
identifier 'x'          Loc=<test2.c:9:17>
plusplus '++'           Loc=<test2.c:9:18>
r_paren ')'             Loc=<test2.c:9:20>
l_brace '{'      [StartOfLine] [LeadingSpace]   Loc=<test2.c:10:5>
identifier 'scanf'       [StartOfLine] [LeadingSpace]   Loc=<test2.c:11:9>
l_paren '('             Loc=<test2.c:11:14>
string_literal '"%lld"'         Loc=<test2.c:11:15>
comma ','               Loc=<test2.c:11:21>
amp '&'         Loc=<test2.c:11:22>
identifier 'a'          Loc=<test2.c:11:23>
r_paren ')'             Loc=<test2.c:11:24>
semi ';'                Loc=<test2.c:11:25>
identifier 'num'         [StartOfLine] [LeadingSpace]   Loc=<test2.c:12:9>
l_square '['            Loc=<test2.c:12:12>
identifier 'judge'              Loc=<test2.c:12:13>
l_paren '('             Loc=<test2.c:12:18>
identifier 'a'          Loc=<test2.c:12:19>
r_paren ')'             Loc=<test2.c:12:20>
r_square ']'            Loc=<test2.c:12:21>
plusplus '++'           Loc=<test2.c:12:22>
semi ';'                Loc=<test2.c:12:24>
r_brace '}'      [StartOfLine] [LeadingSpace]   Loc=<test2.c:13:5>
for 'for'        [StartOfLine] [LeadingSpace]   Loc=<test2.c:14:5>
l_paren '('             Loc=<test2.c:14:8>
identifier 'x'          Loc=<test2.c:14:9>
equal '='               Loc=<test2.c:14:10>
numeric_constant '1'            Loc=<test2.c:14:11>
semi ';'                Loc=<test2.c:14:12>
identifier 'x'          Loc=<test2.c:14:13>
less '<'                Loc=<test2.c:14:14>
numeric_constant '11'           Loc=<test2.c:14:15>
semi ';'                Loc=<test2.c:14:17>
identifier 'x'          Loc=<test2.c:14:18>
plusplus '++'           Loc=<test2.c:14:19>
r_paren ')'             Loc=<test2.c:14:21>
identifier 'printf'      [StartOfLine] [LeadingSpace]   Loc=<test2.c:15:9>
l_paren '('             Loc=<test2.c:15:15>
string_literal '"%d\n"'         Loc=<test2.c:15:16>
comma ','               Loc=<test2.c:15:22>
identifier 'num'                Loc=<test2.c:15:23>
l_square '['            Loc=<test2.c:15:26>
identifier 'x'          Loc=<test2.c:15:27>
r_square ']'            Loc=<test2.c:15:28>
r_paren ')'             Loc=<test2.c:15:29>
semi ';'                Loc=<test2.c:15:30>
return 'return'  [StartOfLine] [LeadingSpace]   Loc=<test2.c:16:5>
numeric_constant '0'     [LeadingSpace] Loc=<test2.c:16:12>
semi ';'                Loc=<test2.c:16:13>
r_brace '}'      [StartOfLine]  Loc=<test2.c:17:1>
int 'int'        [StartOfLine]  Loc=<test2.c:19:1>
identifier 'judge'       [LeadingSpace] Loc=<test2.c:19:5>
l_paren '('             Loc=<test2.c:19:10>
long 'long'             Loc=<test2.c:19:11>
long 'long'      [LeadingSpace] Loc=<test2.c:19:16>
identifier 'a'   [LeadingSpace] Loc=<test2.c:19:21>
r_paren ')'             Loc=<test2.c:19:22>
l_brace '{'      [StartOfLine]  Loc=<test2.c:20:1>
if 'if'  [StartOfLine] [LeadingSpace]   Loc=<test2.c:21:5>
l_paren '('             Loc=<test2.c:21:7>
identifier 'a'          Loc=<test2.c:21:8>
less '<'                Loc=<test2.c:21:9>
numeric_constant '10'           Loc=<test2.c:21:10>
r_paren ')'             Loc=<test2.c:21:12>
return 'return'  [StartOfLine] [LeadingSpace]   Loc=<test2.c:22:9>
numeric_constant '1'     [LeadingSpace] Loc=<test2.c:22:16>
semi ';'                Loc=<test2.c:22:17>
else 'else'      [StartOfLine] [LeadingSpace]   Loc=<test2.c:23:5>
return 'return'  [StartOfLine] [LeadingSpace]   Loc=<test2.c:24:9>
l_paren '('      [LeadingSpace] Loc=<test2.c:24:16>
numeric_constant '1'            Loc=<test2.c:24:17>
plus '+'                Loc=<test2.c:24:18>
identifier 'judge'              Loc=<test2.c:24:19>
l_paren '('             Loc=<test2.c:24:24>
identifier 'a'          Loc=<test2.c:24:25>
slash '/'               Loc=<test2.c:24:26>
numeric_constant '10'           Loc=<test2.c:24:27>
r_paren ')'             Loc=<test2.c:24:29>
r_paren ')'             Loc=<test2.c:24:30>
semi ';'                Loc=<test2.c:24:31>
r_brace '}'      [StartOfLine]  Loc=<test2.c:25:1>
eof ''          Loc=<test2.c:25:2>